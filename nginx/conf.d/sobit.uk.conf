### sobit.uk production reverse proxy with HTTPS + HSTS

# 1) Plain HTTP listener only performs redirect + serves ACME challenges (future renewals)
server {
  listen 80 default_server;
  server_name sobit.uk www.sobit.uk;

  # Allow standalone / webroot challenge responses if we later switch renewal method
  location /.well-known/acme-challenge/ {
    root /var/www/html; # empty dir (can be created) – harmless if unused
    try_files $uri =404;
  }

  # Redirect everything else to canonical HTTPS apex (prefer non-www)
  location / {
    return 301 https://sobit.uk$request_uri;
  }
}

# 2) Primary HTTPS server – canonical host sobit.uk
server {
  listen 443 ssl http2;
  server_name sobit.uk;

  # Certificates (mounted from letsencrypt-data volume: /etc/letsencrypt)
  ssl_certificate /etc/letsencrypt/live/sobit.uk/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/sobit.uk/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/sobit.uk/chain.pem;

  # Strong TLS settings (intermediate compatibility)
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  add_header X-Frame-Options SAMEORIGIN always;
  add_header X-Content-Type-Options nosniff always;
  add_header Referrer-Policy no-referrer always;
  add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
  add_header X-XSS-Protection "0" always;

  # OCSP Stapling (optional, requires resolver)
  resolver 1.1.1.1 1.0.0.1 valid=300s;
  resolver_timeout 5s;
  ssl_stapling on;
  ssl_stapling_verify on;

  # Health/version pass-through (not redirected)
  location /health { proxy_pass http://backend:3000/health; }
  location /version { proxy_pass http://backend:3000/version; }

  # API proxy
  location /api/ {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://backend:3000/api/;
    proxy_http_version 1.1;
  }

  # Frontend root -> served by frontend container
  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://frontend:80/;
  }

  location ~* \.(?:css|js|woff2?|ttf|svg|png|jpe?g|gif)$ {
    proxy_pass http://frontend:80;
    add_header Cache-Control "public, max-age=31536000, immutable";
  }
}

# 3) HTTPS server responding for www redirects to apex
server {
  listen 443 ssl http2;
  server_name www.sobit.uk;

  ssl_certificate /etc/letsencrypt/live/sobit.uk/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/sobit.uk/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/sobit.uk/chain.pem;

  return 301 https://sobit.uk$request_uri;
}
